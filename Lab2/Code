#include <stdio.h>
#include <stdlib.h>
#define MAX 100
char st[MAX];
int top=-1;
void push(char c)
{
    if(top==MAX-1)
    printf("Stack full\n");
    else
    {
        top++;
        st[top]=c;
    }
}
char pop()
{
    char ele;
    if(top==-1)
    printf("stack empty\n");
    else
    {
        ele=st[top];
        top--;
        return ele;
    }
}   
int stackempty()
{
    if(top==-1) 
    return 1;
    else
    return 0;
}

char stacktop()
{
    if( top==-1)
        printf("\n stack is empty!");
    else
        return st[top];
}
int priority(char op)
{
    switch(op)
    {
        case '+':
        case '-':return 1;
        case '*':
        case '/':return 2;
        case '^': return 3;
        default : return 0;
    }
}
void main()
{
	char infix[50],item;
    int i;
    printf("Enter the infix expression :");
    scanf("%s",infix);
    printf("\n Postfix: ");
    i=0;
     while (infix[i]!='\0')
    {
        
       
        switch (infix[i])
        {
            case '(': push(infix[i]);
                      break;
            case ')':while(( item=pop())!='(')
                      printf("%c",item);
                      break;
            case '+':
            case '-':
            case '*':
            case '/': 
            case '^':
                      while(!stackempty() && priority(infix[i])<=priority(stacktop()))
                      {
                            item=pop();
                                                 
                            printf("%c", item);
                      }
                      
                      push(infix[i]);
                      break;
            default : printf("%c", infix[i]);
                      break;
                      
           
        }
         i++;
         
         
    }
    
    
    while(!stackempty())
    {
        char item;
        item=pop();
        printf("%c", item);
    }
    printf("\n");

 
}
